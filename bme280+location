//Reading BME280 sensor data, combining it with location and sending it via MQTT

// This #include statement was automatically added by the Particle IDE.
#include <google-maps-device-locator.h>

// This #include statement was automatically added by the Particle IDE.
#include <MQTT.h>


#include <Adafruit_BME280.h>


#define SEALEVELPRESSURE_HPA (1013.25)
// kerrotaan mit채 hivemq brokeria k채ytet채채n
MQTT client("broker.hivemq.com", 1883, callback);

GoogleMapsDeviceLocator locator;

Adafruit_BME280 bme;

unsigned long delayTime;

void locationCallback(float lat, float lon, float accuracy){
  
  String locationMessage = "Lat " + String(lat) + " Lon " + String(lon)+" Temp " + String(bme.readTemperature());
  
 
  
  client.publish("outTopic/message", locationMessage);


  }
//tulevat messaget
void callback(char* topic, byte* payload, unsigned int length) {
char p[length + 1];
memcpy(p, payload, length);
p[length] = NULL;

if (!strcmp(p, "RAINBOW"))
    
    delay(100);
}

void setup()
//maps locator setuppaus
{
        locator.withSubscribe(locationCallback).withLocatePeriodic(10);

               // connect to the server(unique id by Time.now())
        client.connect("sparkclient_" + String(Time.now()));

        // publish/subscribe
        if (client.isConnected()) {
        client.publish("outTopic/message","hello world");
        client.subscribe("inTopic/message");
    }

    //bme setuppaus
    {
    Serial.begin(9600);
    while (!Serial)
        ; // time to get serial running
    Serial.println(F("BME280 test"));

    unsigned status;

    // default settings
    // (you can also pass in a Wire library object like &Wire2)
    status = bme.begin();
    
    if (!status)
    {
        Serial.println("Could not find a valid BME280 sensor, check wiring, address, sensor ID!");

        while (1);
    }

    Serial.println("-- Default Test --");
    delayTime = 1000;

    Serial.println();
    Serial.println("rivi 76");
    }
}

void printValues()    {
        Serial.print("Temperature = ");
        Serial.print(bme.readTemperature());
        Serial.println(" *C");
    }
    
void loop()
    {
        printValues();
        delay(delayTime);
        if (client.isConnected())
        client.loop();
        locator.loop();
        Serial.println("Looping");
    }

